name: tests

on: [push, pull_request]

jobs:

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

          # virtualenvs-path: ~/.venv
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      # install dependencies if cache does not exist
      - name: Check cache and install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      # poetry run pre-commit run --all-files
      - name: Run linters
        run: |
          source .venv/bin/activate
          flake8 src/
          black src/ --check
          isort src/

  test:
    needs: linting
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Copy .env file
        run: cp Ctl/dev/example.env Ctl/dev/.env
      - name: Launch database container
        run: Ctl/dev/compose.sh up -d postgres
      - name: Build container
        run: Ctl/dev/compose.sh build account_django
      - name: Run tests
        run: Ctl/dev/run.sh run_tests
      # upload coverage stats
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          file: src/coverage.xml
          fail_ci_if_error: true
