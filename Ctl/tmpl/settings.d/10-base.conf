from django.utils.translation import gettext_lazy as _

MIDDLEWARE += [
    "account.middleware.RequestAugmentation", 
]

INSTALLED_APPS += (
    # base

    'django.contrib.sites',
    'django_grainy',
    'reversion',
    'captcha',
    'django_handleref',
    'rest_framework',

    # rendering

    'crispy_forms',

    # oauth

    'social_django',

    # account_service apps

    'common',
    'account',
    'billing',
    'applications',
)

CRISPY_TEMPLATE_PACK = 'bootstrap4'

SITE_ID = 1

{% if plugin.deploy_project.tag == "." %}
import uuid
STATIC_URL = "/s/{}/".format(uuid.uuid4())
{% else %}
STATIC_URL = "/s/{}/".format(PACKAGE_VERSION)
BLA = "BLU"
{% endif %}

LOGIN_URL = "/account/auth/login/"
LOGIN_REDIRECT_URL = "/account"

AUTHENTICATION_BACKENDS = ["django_grainy.backends.GrainyBackend"]

RECAPTCHA_PUBLIC_KEY = "{{ recaptcha.public_key }}"
RECAPTCHA_PRIVATE_KEY = "{{ recaptcha.private_key }}"

CACHES = {
    "default" : {
        "BACKEND" : "django.core.cache.backends.db.DatabaseCache",
        "LOCATION" : "django_cache",
        "OPTIONS" : {
          # maximum number of entries in the cache
          "MAX_ENTRIES" : 5000,
          # once max entries are reach delete 500 of the oldest entries
          "CULL_FREQUENCY" : 10
        }
    }
}

USE_TZ = False

VALIDATE_PASSWORD_LENGTH = {{ validate.password_length }}


INTERNAL_API_KEY_PERMS = {
{% for namespace,perms in api_keys.internal.perms.items() %}
  "{{ namespace }}" : "{{ perms }}",
{% endfor %}
}

TEMPLATES[0]["OPTIONS"]["context_processors"] += [
    'account.context_processors.permissions',
]


