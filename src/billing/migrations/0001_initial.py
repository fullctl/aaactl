# Generated by Django 2.2.11 on 2020-03-27 09:32

import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
import django.db.models.manager
import django_countries.fields
import django_handleref.models
from django.db import migrations, models

import billing.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [("account", "0012_auto_20200324_1357")]

    operations = [
        migrations.CreateModel(
            name="BillingContact",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="billcon_set",
                        to="account.Organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Billing Contact",
                "verbose_name_plural": "Billing Contacts",
                "db_table": "billing_contact",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="OrderHistory",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "billed_to",
                    models.CharField(
                        help_text="Holds the name of the payment method that was billled for archiving purposes.",
                        max_length=255,
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True,
                        help_text="Order specific notes",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "processed",
                    models.DateTimeField(help_text="When was this order processed"),
                ),
                (
                    "order_id",
                    models.CharField(
                        default=billing.models.unique_order_history_id,
                        max_length=16,
                        unique=True,
                    ),
                ),
                (
                    "billcon",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="order_set",
                        to="billing.BillingContact",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order History Entry",
                "verbose_name_plural": "Order History Entries",
                "db_table": "billing_order_history",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="PaymentCharge",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Price attributed to cycle for this product",
                        max_digits=6,
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "data",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=dict, help_text="Any extra data"
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment Charge",
                "verbose_name_plural": "Payment Charges",
                "db_table": "billing_charge",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "custom_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("processor", models.CharField(max_length=255)),
                (
                    "data",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=dict
                    ),
                ),
                ("holder", models.CharField(max_length=255)),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("city", models.CharField(max_length=255)),
                ("address1", models.CharField(max_length=255)),
                ("address2", models.CharField(blank=True, max_length=255, null=True)),
                ("postal_code", models.CharField(max_length=255)),
                ("state", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "billcon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pay_set",
                        to="billing.BillingContact",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment Method",
                "verbose_name_plural": "Payment Methods",
                "db_table": "billing_payment_method",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Internal product name", max_length=255, unique=True
                    ),
                ),
                (
                    "component",
                    models.CharField(
                        help_text="Product belongs to component", max_length=255
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the product or service being billed",
                        max_length=255,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Price charge on initial setup / purchase. For recurring pricing this could specify a setup fee. For non-recurring pricing, this is the product price.",
                        max_digits=6,
                    ),
                ),
                (
                    "data",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Arbitrary extra data you want to define for this product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "db_table": "billing_product",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="ProductGroup",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("subscription_cycle_anchor", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Product Group",
                "verbose_name_plural": "Product Groups",
                "db_table": "billing_product_group",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "cycle_interval",
                    models.CharField(
                        choices=[("month", "Monthly"), ("year", "Yearly")],
                        default="month",
                        max_length=255,
                    ),
                ),
                (
                    "cycle_start",
                    models.DateTimeField(
                        blank=True, help_text="Start of billing cycle", null=True
                    ),
                ),
                ("cycle_frequency", models.PositiveIntegerField(default=1)),
                (
                    "data",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Any extra data for the subscription",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_set",
                        to="billing.ProductGroup",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_set",
                        to="account.Organization",
                    ),
                ),
                (
                    "pay",
                    models.ForeignKey(
                        help_text="User payment option that will be charged by this sub",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sub_set",
                        to="billing.PaymentMethod",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription",
                "verbose_name_plural": "Subscriptions",
                "db_table": "billing_subscription",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="SubscriptionCycle",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                ("start", models.DateField()),
                ("end", models.DateField()),
                (
                    "sub",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cycle_set",
                        to="billing.Subscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription Cycle",
                "verbose_name_plural": "Subscription Cycles",
                "db_table": "billing_subscription_cycle",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="SubscriptionProduct",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "data",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Any extra data for the subscription item",
                    ),
                ),
                (
                    "prod",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_set",
                        to="billing.Product",
                    ),
                ),
                (
                    "sub",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subprod_set",
                        to="billing.Subscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription Product",
                "verbose_name_plural": "Subscription Products",
                "db_table": "billing_subscription_product",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="SubscriptionModifier",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("reduction", "Price Reduction"),
                            ("quantity", "Free Quantity"),
                        ],
                        max_length=255,
                    ),
                ),
                ("value", models.IntegerField(default=0)),
                ("valid", models.DateTimeField(help_text="Valid until")),
                (
                    "source",
                    models.CharField(
                        help_text="source of modifier, why was it applied",
                        max_length=255,
                    ),
                ),
                (
                    "sub",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modifier_set_set",
                        to="billing.Subscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription Price Modifier",
                "verbose_name_plural": "Subscription Price Modifiers",
                "db_table": "billing_subscription_modifier",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="SubscriptionCycleProduct",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "usage",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Usage attributed to cycle for this product",
                    ),
                ),
                (
                    "cycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cycleprod_set",
                        to="billing.SubscriptionCycle",
                    ),
                ),
                (
                    "subprod",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cycleprod_set",
                        to="billing.SubscriptionProduct",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription Cycle Product",
                "verbose_name_plural": "Subscription Cycle Product",
                "db_table": "billing_subscription_cycle_product",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="SubscriptionCycleCharge",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "chg",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cyclechg",
                        to="billing.PaymentCharge",
                    ),
                ),
                (
                    "cycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cyclechg_set",
                        to="billing.SubscriptionCycle",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription Cycle Charge",
                "verbose_name_plural": "Subscription Cycle Charges",
                "db_table": "billing_subscription_cycle_charge",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="RecurringProduct",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("fixed", "Recurring: Fixed Price"),
                            ("metered", "Recurring: Metered Price"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Price in the context of recurring charges. For fixed recurring pricing this would be the price charged each cycle. For metered recurring pricing this could be the price as it relates to the metered value.",
                        max_digits=6,
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        default="Unit",
                        help_text="Label for a unit in the context of usage",
                        max_length=32,
                    ),
                ),
                (
                    "unit_plural",
                    models.CharField(
                        default="Units",
                        help_text="Label for multiple units in the context of usage",
                        max_length=40,
                    ),
                ),
                (
                    "metered_url",
                    models.URLField(
                        blank=True,
                        help_text="For metered charges, specify the url that is used to retrieve the current metered value",
                        null=True,
                    ),
                ),
                (
                    "data",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Arbitrary extra data you want to define for this recurring product",
                    ),
                ),
                (
                    "prod",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring",
                        to="billing.Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recurring Product Settings",
                "verbose_name_plural": "Recurring Product Settings",
                "db_table": "billing_recurring_product",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.CreateModel(
            name="ProductModifier",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("reduction", "Price Reduction"),
                            ("quantity", "Free Quantity"),
                        ],
                        max_length=255,
                    ),
                ),
                ("value", models.PositiveIntegerField(default=0)),
                (
                    "duration",
                    models.IntegerField(default=0, help_text="Duration in days"),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="activation code",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "prod",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modifier_set",
                        to="billing.Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Price Modifier",
                "verbose_name_plural": "Product Price Modifiers",
                "db_table": "billing_product_modifier",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.AddField(
            model_name="product",
            name="group",
            field=models.ForeignKey(
                blank=True,
                help_text="Allows you to group products together for billing purposes",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="prod_set",
                to="billing.ProductGroup",
            ),
        ),
        migrations.AddField(
            model_name="paymentcharge",
            name="pay",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chg_set",
                to="billing.PaymentMethod",
            ),
        ),
        migrations.CreateModel(
            name="OrderHistoryItem",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                ("description", models.CharField(max_length=255)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Price charged",
                        max_digits=6,
                    ),
                ),
                (
                    "cycleprod",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orderitem",
                        to="billing.SubscriptionCycleProduct",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orderitem_set",
                        to="billing.OrderHistory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order History Item",
                "verbose_name_plural": "Order History Items",
                "db_table": "billing_order_history_item",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
        migrations.AddField(
            model_name="orderhistory",
            name="chg",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="order",
                to="billing.PaymentCharge",
            ),
        ),
        migrations.CreateModel(
            name="CustomerData",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created",
                    django_handleref.models.CreatedDateTimeField(
                        auto_now_add=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    django_handleref.models.UpdatedDateTimeField(
                        auto_now=True, verbose_name="Updated"
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ok", "Ok"),
                            ("pending", "Pending"),
                            ("deactivated", "Deactivated"),
                            ("failed", "Failed"),
                            ("expired", "Expired"),
                        ],
                        default="ok",
                        max_length=12,
                    ),
                ),
                (
                    "data",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=dict
                    ),
                ),
                (
                    "billcon",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer",
                        to="billing.BillingContact",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Data",
                "verbose_name_plural": "Customer Data",
                "db_table": "billing_customer_data",
            },
            managers=[("handleref", django.db.models.manager.Manager())],
        ),
    ]
